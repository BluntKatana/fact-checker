import spacy

def find_capital_in_context(context):
    # Load the spaCy model
    nlp = spacy.load("en_core_web_sm")

    # Process the context
    doc_context = nlp(context)

    # Look for patterns related to capital cities
    for sent in doc_context.sents:
        if "capital" in sent.text.lower():
            return sent.text

    return None

def check_question_in_context(question, context):
    # Load the spaCy model
    nlp = spacy.load("en_core_web_sm")

    # Process the question
    doc_question = nlp(question)

    # Check if the question is answered in the context
    is_question_in_context = any(token.text.lower() in context.lower() for token in doc_question)

    return is_question_in_context

# Example
question = "What is the capital of Netherlands?"
context = "Netherlands (Dutch: Nederland [ˈneːdərlɑnt] ⓘ), informally Holland, is a country primarily located in Western Europe and partly in the Caribbean. It consists of three island territories in the Caribbean Sea, and the capital is Amsterdam."

# Find the mention of the capital in the context
capital_mention = find_capital_in_context(context)

# Check if the question is answered in the context
if capital_mention:
    print(f"The context mentions the capital: {capital_mention}")
    result = check_question_in_context(question, context)
    if result:
        print(f"The answer is: {capital_mention}.")
    else:
        print("The context does not answer the question.")
else:
    print("The context does not provide information about the capital.")
